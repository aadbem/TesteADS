
# decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input#concept.label = ML model input
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.Input(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double)#phrase.navigation = a new {ML model input} where {0, creditscore} {1, income} {2, loanamount} {3, monthduration} {4, rate} {5, yearlyreimbursement} 
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.creditscore#phrase.action = set the creditscore of {this} to {creditscore}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.creditscore#phrase.addition_setter = add {creditscore} to the creditscore of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.creditscore#phrase.navigation = {creditscore} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.creditscore#phrase.subtraction_setter = subtract {creditscore} from the creditscore of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.income#phrase.action = set the income of {this} to {income}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.income#phrase.addition_setter = add {income} to the income of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.income#phrase.navigation = {income} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.income#phrase.subtraction_setter = subtract {income} from the income of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.loanamount#phrase.action = set the loanamount of {this} to {loanamount}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.loanamount#phrase.addition_setter = add {loanamount} to the loanamount of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.loanamount#phrase.navigation = {loanamount} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.loanamount#phrase.subtraction_setter = subtract {loanamount} from the loanamount of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.monthduration#phrase.action = set the monthduration of {this} to {monthduration}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.monthduration#phrase.addition_setter = add {monthduration} to the monthduration of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.monthduration#phrase.navigation = {monthduration} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.monthduration#phrase.subtraction_setter = subtract {monthduration} from the monthduration of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.rate#phrase.action = set the rate of {this} to {rate}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.rate#phrase.addition_setter = add {rate} to the rate of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.rate#phrase.navigation = {rate} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.rate#phrase.subtraction_setter = subtract {rate} from the rate of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.yearlyreimbursement#phrase.action = set the yearlyreimbursement of {this} to {yearlyreimbursement}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.yearlyreimbursement#phrase.addition_setter = add {yearlyreimbursement} to the yearlyreimbursement of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.yearlyreimbursement#phrase.navigation = {yearlyreimbursement} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input.yearlyreimbursement#phrase.subtraction_setter = subtract {yearlyreimbursement} from the yearlyreimbursement of {this}

# decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output#concept.label = ML model output
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.Output(java.lang.String,java.lang.String,boolean,java.lang.Long,java.lang.Double,java.lang.Double)#phrase.navigation = a new {ML model output} where {0, error code} {1, error message} {2, in error} {3, predicted paymentdefault} {4, probability0} {5, probability1} 
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.errorCode#phrase.action = set the error code of {this} to {error code}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.errorCode#phrase.navigation = {error code} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.errorMessage#phrase.action = set the error message of {this} to {error message}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.errorMessage#phrase.navigation = {error message} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.inError#phrase.action[0] = {this} gets in error only if {in error}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.inError#phrase.action[1] = make it {in error} that {this} is in error
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.inError#phrase.action[1].deprecated = true
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.inError#phrase.navigation = {this} is in error
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.inError#phrase.negative_predicate = {this} is not in error
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.inError#phrase.negative_predicate_setter = {this} does not get in error
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.inError#phrase.positive_predicate_setter = {this} gets in error
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.predictedPaymentdefault#phrase.action = set the predicted paymentdefault of {this} to {predicted paymentdefault}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.predictedPaymentdefault#phrase.addition_setter = add {predicted paymentdefault} to the predicted paymentdefault of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.predictedPaymentdefault#phrase.navigation = {predicted paymentdefault} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.predictedPaymentdefault#phrase.subtraction_setter = subtract {predicted paymentdefault} from the predicted paymentdefault of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability0#phrase.action = set the probability0 of {this} to {probability0}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability0#phrase.addition_setter = add {probability0} to the probability0 of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability0#phrase.navigation = {probability0} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability0#phrase.subtraction_setter = subtract {probability0} from the probability0 of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability1#phrase.action = set the probability1 of {this} to {probability1}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability1#phrase.addition_setter = add {probability1} to the probability1 of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability1#phrase.navigation = {probability1} of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.probability1#phrase.subtraction_setter = subtract {probability1} from the probability1 of {this}
decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Output.run(decisions.alberto_projects.ml_based_loan_approval.loanRiskScore.Input)#phrase.navigation = predict({0})
